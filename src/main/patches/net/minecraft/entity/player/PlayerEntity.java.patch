--- PlayerEntity.java
+++ PlayerEntity.java
@@ -66,11 +66,11 @@
 import net.minecraft.text.Text;
 import net.minecraft.util.UseAction;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.Box;
 import net.minecraft.util.math.Direction;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.CommandBlockExecutor;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.World;
 import net.minecraft.world.level.LevelInfo;
@@ -279,12 +279,12 @@
 				this.incrementStat(Stats.TIME_SINCE_DEATH);
 			}
 		}
 
 		int i = 29999999;
-		double h = MathHelper.clamp(this.x, -2.9999999E7, 2.9999999E7);
-		double j = MathHelper.clamp(this.z, -2.9999999E7, 2.9999999E7);
+		double h = Mth.clamp(this.x, -2.9999999E7, 2.9999999E7);
+		double j = Mth.clamp(this.z, -2.9999999E7, 2.9999999E7);
 		if (h != this.x || j != this.z) {
 			this.updatePosition(h, this.y, j);
 		}
 	}
 
@@ -446,11 +446,11 @@
 		if (this.isSprinting()) {
 			this.flyingSpeed = (float)((double)this.flyingSpeed + (double)this.field_4006 * 0.3);
 		}
 
 		this.setMovementSpeed((float)entityAttributeInstance.getValue());
-		float f = MathHelper.sqrt(this.velocityX * this.velocityX + this.velocityZ * this.velocityZ);
+		float f = Mth.sqrt(this.velocityX * this.velocityX + this.velocityZ * this.velocityZ);
 		float g = (float)(Math.atan(-this.velocityY * 0.2F) * 15.0);
 		if (f > 0.1F) {
 			f = 0.1F;
 		}
 
@@ -513,12 +513,12 @@
 		if (!this.world.getGameRules().getBoolean("keepInventory")) {
 			this.inventory.dropAll();
 		}
 
 		if (damageSource != null) {
-			this.velocityX = (double)(-MathHelper.cos((this.knockbackVelocity + this.yaw) * (float) Math.PI / 180.0F) * 0.1F);
-			this.velocityZ = (double)(-MathHelper.sin((this.knockbackVelocity + this.yaw) * (float) Math.PI / 180.0F) * 0.1F);
+			this.velocityX = (double)(-Mth.cos((this.knockbackVelocity + this.yaw) * (float) Math.PI / 180.0F) * 0.1F);
+			this.velocityZ = (double)(-Mth.sin((this.knockbackVelocity + this.yaw) * (float) Math.PI / 180.0F) * 0.1F);
 		} else {
 			this.velocityX = this.velocityZ = 0.0;
 		}
 
 		this.incrementStat(Stats.DEATHS);
@@ -602,18 +602,18 @@
 			}
 
 			if (bl) {
 				float f = this.random.nextFloat() * 0.5F;
 				float g = this.random.nextFloat() * (float) Math.PI * 2.0F;
-				itemEntity.velocityX = (double)(-MathHelper.sin(g) * f);
-				itemEntity.velocityZ = (double)(MathHelper.cos(g) * f);
+				itemEntity.velocityX = (double)(-Mth.sin(g) * f);
+				itemEntity.velocityZ = (double)(Mth.cos(g) * f);
 				itemEntity.velocityY = 0.2F;
 			} else {
 				float f = 0.3F;
-				itemEntity.velocityX = (double)(-MathHelper.sin(this.yaw / 180.0F * (float) Math.PI) * MathHelper.cos(this.pitch / 180.0F * (float) Math.PI) * f);
-				itemEntity.velocityZ = (double)(MathHelper.cos(this.yaw / 180.0F * (float) Math.PI) * MathHelper.cos(this.pitch / 180.0F * (float) Math.PI) * f);
-				itemEntity.velocityY = (double)(-MathHelper.sin(this.pitch / 180.0F * (float) Math.PI) * f + 0.1F);
+				itemEntity.velocityX = (double)(-Mth.sin(this.yaw / 180.0F * (float) Math.PI) * Mth.cos(this.pitch / 180.0F * (float) Math.PI) * f);
+				itemEntity.velocityZ = (double)(Mth.cos(this.yaw / 180.0F * (float) Math.PI) * Mth.cos(this.pitch / 180.0F * (float) Math.PI) * f);
+				itemEntity.velocityY = (double)(-Mth.sin(this.pitch / 180.0F * (float) Math.PI) * f + 0.1F);
 				float g = this.random.nextFloat() * (float) Math.PI * 2.0F;
 				f = 0.02F * this.random.nextFloat();
 				itemEntity.velocityX = itemEntity.velocityX + Math.cos((double)g) * (double)f;
 				itemEntity.velocityY = itemEntity.velocityY + (double)((this.random.nextFloat() - this.random.nextFloat()) * 0.1F);
 				itemEntity.velocityZ = itemEntity.velocityZ + Math.sin((double)g) * (double)f;
@@ -959,13 +959,13 @@
 					double h = entity.velocityZ;
 					boolean bl3 = entity.damage(DamageSource.player(this), f);
 					if (bl3) {
 						if (i > 0) {
 							entity.addVelocity(
-								(double)(-MathHelper.sin(this.yaw * (float) Math.PI / 180.0F) * (float)i * 0.5F),
+								(double)(-Mth.sin(this.yaw * (float) Math.PI / 180.0F) * (float)i * 0.5F),
 								0.1,
-								(double)(MathHelper.cos(this.yaw * (float) Math.PI / 180.0F) * (float)i * 0.5F)
+								(double)(Mth.cos(this.yaw * (float) Math.PI / 180.0F) * (float)i * 0.5F)
 							);
 							this.velocityX *= 0.6;
 							this.velocityZ *= 0.6;
 							this.setSprinting(false);
 						}
@@ -1297,27 +1297,27 @@
 	}
 
 	public void method_3209(double d, double e, double f) {
 		if (this.vehicle == null) {
 			if (this.isSubmergedIn(Material.WATER)) {
-				int i = Math.round(MathHelper.sqrt(d * d + e * e + f * f) * 100.0F);
+				int i = Math.round(Mth.sqrt(d * d + e * e + f * f) * 100.0F);
 				if (i > 0) {
 					this.incrementStat(Stats.CM_DIVED, i);
 					this.addExhaustion(0.015F * (float)i * 0.01F);
 				}
 			} else if (this.isTouchingWater()) {
-				int i = Math.round(MathHelper.sqrt(d * d + f * f) * 100.0F);
+				int i = Math.round(Mth.sqrt(d * d + f * f) * 100.0F);
 				if (i > 0) {
 					this.incrementStat(Stats.CM_SWUM, i);
 					this.addExhaustion(0.015F * (float)i * 0.01F);
 				}
 			} else if (this.isClimbing()) {
 				if (e > 0.0) {
 					this.incrementStat(Stats.CM_CLIMB, (int)Math.round(e * 100.0));
 				}
 			} else if (this.onGround) {
-				int i = Math.round(MathHelper.sqrt(d * d + f * f) * 100.0F);
+				int i = Math.round(Mth.sqrt(d * d + f * f) * 100.0F);
 				if (i > 0) {
 					this.incrementStat(Stats.CM_WALKED, i);
 					if (this.isSprinting()) {
 						this.incrementStat(Stats.CM_SPRINTED, i);
 						this.addExhaustion(0.099999994F * (float)i * 0.01F);
@@ -1328,27 +1328,27 @@
 
 						this.addExhaustion(0.01F * (float)i * 0.01F);
 					}
 				}
 			} else {
-				int i = Math.round(MathHelper.sqrt(d * d + f * f) * 100.0F);
+				int i = Math.round(Mth.sqrt(d * d + f * f) * 100.0F);
 				if (i > 25) {
 					this.incrementStat(Stats.CM_FLOWN, i);
 				}
 			}
 		}
 	}
 
 	private void method_3212(double d, double e, double f) {
 		if (this.vehicle != null) {
-			int i = Math.round(MathHelper.sqrt(d * d + e * e + f * f) * 100.0F);
+			int i = Math.round(Mth.sqrt(d * d + e * e + f * f) * 100.0F);
 			if (i > 0) {
 				if (this.vehicle instanceof AbstractMinecartEntity) {
 					this.incrementStat(Stats.CM_MINECART, i);
 					if (this.field_4011 == null) {
 						this.field_4011 = new BlockPos(this);
-					} else if (this.field_4011.squaredDistanceTo((double)MathHelper.floor(this.x), (double)MathHelper.floor(this.y), (double)MathHelper.floor(this.z))
+					} else if (this.field_4011.squaredDistanceTo((double) Mth.floor(this.x), (double) Mth.floor(this.y), (double) Mth.floor(this.z))
 						>= 1000000.0) {
 						this.incrementStat(AchievementsAndCriterions.ON_A_RAIL);
 					}
 				} else if (this.vehicle instanceof BoatEntity) {
 					this.incrementStat(Stats.CM_SAILED, i);
