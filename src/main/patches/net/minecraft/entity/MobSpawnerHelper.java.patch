--- MobSpawnerHelper.java
+++ MobSpawnerHelper.java
@@ -10,11 +10,11 @@
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.server.world.ServerWorld;
 import net.minecraft.util.collection.Weighting;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.ChunkPos;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.world.World;
 import net.minecraft.world.biome.Biome;
 import net.minecraft.world.chunk.Chunk;
 
 public final class MobSpawnerHelper {
@@ -28,12 +28,12 @@
 			this.field_9222.clear();
 			int i = 0;
 
 			for (PlayerEntity playerEntity : serverWorld.playerEntities) {
 				if (!playerEntity.isSpectator()) {
-					int j = MathHelper.floor(playerEntity.x / 16.0);
-					int k = MathHelper.floor(playerEntity.z / 16.0);
+					int j = Mth.floor(playerEntity.x / 16.0);
+					int k = Mth.floor(playerEntity.z / 16.0);
 					int l = 8;
 
 					for (int m = -l; m <= l; m++) {
 						for (int n = -l; n <= l; n++) {
 							boolean bl4 = m == -l || m == l || n == -l || n == l;
@@ -130,11 +130,11 @@
 
 	protected static BlockPos findSpawnLocation(World world, int i, int j) {
 		Chunk chunk = world.getChunk(i, j);
 		int k = i * 16 + world.random.nextInt(16);
 		int l = j * 16 + world.random.nextInt(16);
-		int m = MathHelper.roundUp(chunk.getHighestBlockY(new BlockPos(k, 0, l)) + 1, 16);
+		int m = Mth.roundUp(chunk.getHighestBlockY(new BlockPos(k, 0, l)) + 1, 16);
 		int n = world.random.nextInt(m > 0 ? m : chunk.getHighestNonEmptySectionYOffset() + 16 - 1);
 		return new BlockPos(k, n, l);
 	}
 
 	public static boolean isSpawnable(MobEntity.Location location, World world, BlockPos blockPos) {
