--- FishingBobberEntity.java
+++ FishingBobberEntity.java
@@ -342,11 +342,11 @@
 					} else if (this.fishTravelCountdown > 0) {
 						this.fishTravelCountdown -= t;
 						if (this.fishTravelCountdown <= 0) {
 							this.velocityY -= 0.2F;
 							this.playSound("random.splash", 0.25F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.4F);
-							float u = (float)MathHelper.floor(this.getBoundingBox().minY);
+							float u = (float) MathHelper.floor(this.getBoundingBox().minY);
 							serverWorld.addParticle(
 								ParticleType.BUBBLE, this.x, (double)(u + 1.0F), this.z, (int)(1.0F + this.width * 20.0F), (double)this.width, 0.0, (double)this.width, 0.2F
 							);
 							serverWorld.addParticle(
 								ParticleType.WATER_WAKE, this.x, (double)(u + 1.0F), this.z, (int)(1.0F + this.width * 20.0F), (double)this.width, 0.0, (double)this.width, 0.2F
@@ -356,11 +356,11 @@
 							this.fishAngle = (float)((double)this.fishAngle + this.random.nextGaussian() * 4.0);
 							float u = this.fishAngle * (float) (Math.PI / 180.0);
 							float v = MathHelper.sin(u);
 							float w = MathHelper.cos(u);
 							double s = this.x + (double)(v * (float)this.fishTravelCountdown * 0.1F);
-							double x = (double)((float)MathHelper.floor(this.getBoundingBox().minY) + 1.0F);
+							double x = (double)((float) MathHelper.floor(this.getBoundingBox().minY) + 1.0F);
 							double y = this.z + (double)(w * (float)this.fishTravelCountdown * 0.1F);
 							Block block = serverWorld.getBlockState(new BlockPos((int)s, (int)x - 1, (int)y)).getBlock();
 							if (block == Blocks.WATER || block == Blocks.FLOWING_WATER) {
 								if (this.random.nextFloat() < 0.15F) {
 									serverWorld.addParticle(ParticleType.BUBBLE, s, x - 0.1F, y, 1, (double)v, 0.1, (double)w, 0.0);
@@ -385,11 +385,11 @@
 
 						if (this.random.nextFloat() < u) {
 							float v = MathHelper.nextFloat(this.random, 0.0F, 360.0F) * (float) (Math.PI / 180.0);
 							float w = MathHelper.nextFloat(this.random, 25.0F, 60.0F);
 							double s = this.x + (double)(MathHelper.sin(v) * w * 0.1F);
-							double x = (double)((float)MathHelper.floor(this.getBoundingBox().minY) + 1.0F);
+							double x = (double)((float) MathHelper.floor(this.getBoundingBox().minY) + 1.0F);
 							double y = this.z + (double)(MathHelper.cos(v) * w * 0.1F);
 							Block block = serverWorld.getBlockState(new BlockPos((int)s, (int)x - 1, (int)y)).getBlock();
 							if (block == Blocks.WATER || block == Blocks.FLOWING_WATER) {
 								serverWorld.addParticle(ParticleType.WATER, s, x, y, 2 + this.random.nextInt(2), 0.1F, 0.0, 0.1F, 0.0);
 							}
@@ -457,25 +457,25 @@
 			int i = 0;
 			if (this.caughtEntity != null) {
 				double d = this.thrower.x - this.x;
 				double e = this.thrower.y - this.y;
 				double f = this.thrower.z - this.z;
-				double g = (double)MathHelper.sqrt(d * d + e * e + f * f);
+				double g = (double) MathHelper.sqrt(d * d + e * e + f * f);
 				double h = 0.1;
 				this.caughtEntity.velocityX += d * h;
-				this.caughtEntity.velocityY = this.caughtEntity.velocityY + e * h + (double)MathHelper.sqrt(g) * 0.08;
+				this.caughtEntity.velocityY = this.caughtEntity.velocityY + e * h + (double) MathHelper.sqrt(g) * 0.08;
 				this.caughtEntity.velocityZ += f * h;
 				i = 3;
 			} else if (this.hookCountdown > 0) {
 				ItemEntity itemEntity = new ItemEntity(this.world, this.x, this.y, this.z, this.getResult());
 				double j = this.thrower.x - this.x;
 				double k = this.thrower.y - this.y;
 				double l = this.thrower.z - this.z;
-				double m = (double)MathHelper.sqrt(j * j + k * k + l * l);
+				double m = (double) MathHelper.sqrt(j * j + k * k + l * l);
 				double n = 0.1;
 				itemEntity.velocityX = j * n;
-				itemEntity.velocityY = k * n + (double)MathHelper.sqrt(m) * 0.08;
+				itemEntity.velocityY = k * n + (double) MathHelper.sqrt(m) * 0.08;
 				itemEntity.velocityZ = l * n;
 				this.world.spawnEntity(itemEntity);
 				this.thrower
 					.world
 					.spawnEntity(new ExperienceOrbEntity(this.thrower.world, this.thrower.x, this.thrower.y + 0.5, this.thrower.z + 0.5, this.random.nextInt(6) + 1));
