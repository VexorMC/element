--- ZipResourcePack.java
+++ ZipResourcePack.java
@@ -1,18 +1,17 @@
 package net.minecraft.resource;
 
 import com.google.common.base.Splitter;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
+import net.minecraft.util.Identifier;
+
 import java.io.Closeable;
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
-import java.util.Collections;
-import java.util.Enumeration;
-import java.util.List;
-import java.util.Set;
+import java.util.*;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 
 public class ZipResourcePack extends AbstractFileResourcePack implements Closeable {
 	public static final Splitter TYPE_NAMESPACE_SPLITTER = Splitter.on('/').omitEmptyStrings().limit(3);
@@ -29,10 +28,46 @@
 
 		return this.file;
 	}
 
 	@Override
+	public List<Identifier> getAllResources() throws IOException {
+		List<Identifier> resources = new ArrayList<>();
+		ZipFile zipFile = this.getZipFile();
+		Enumeration<? extends ZipEntry> entries = zipFile.entries();
+
+		while (entries.hasMoreElements()) {
+			ZipEntry entry = entries.nextElement();
+			String name = entry.getName();
+
+			if (entry.isDirectory() || !name.startsWith("assets/")) {
+				continue;
+			}
+
+			List<String> parts = Lists.newArrayList(TYPE_NAMESPACE_SPLITTER.split(name));
+			if (parts.size() < 3) continue;
+
+			String namespace = parts.get(1);
+			String path = name.substring(("assets/" + namespace + "/").length());
+
+			if (!namespace.equals(namespace.toLowerCase())) {
+				this.warnNonLowercaseNamespace(namespace);
+				continue;
+			}
+
+			try {
+				resources.add(new Identifier(namespace, path));
+			} catch (IllegalArgumentException ignored) {
+				// skip malformed identifiers
+			}
+		}
+
+		return resources;
+	}
+
+
+	@Override
 	protected InputStream openFile(String string) throws IOException {
 		ZipFile zipFile = this.getZipFile();
 		ZipEntry zipEntry = zipFile.getEntry(string);
 		if (zipEntry == null) {
 			throw new ResourceNotFoundException(this.base, string);
