--- GuardianEntityModel.java
+++ GuardianEntityModel.java
@@ -2,11 +2,11 @@
 
 import net.minecraft.client.MinecraftClient;
 import net.minecraft.client.render.model.ModelPart;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.mob.GuardianEntity;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.util.math.Vec3d;
 
 public class GuardianEntityModel extends EntityModel {
 	private ModelPart body;
 	private ModelPart eye;
@@ -72,13 +72,13 @@
 
 		for (int n = 0; n < 12; n++) {
 			this.spikes[n].posX = (float) Math.PI * fs[n];
 			this.spikes[n].posY = (float) Math.PI * gs[n];
 			this.spikes[n].posZ = (float) Math.PI * hs[n];
-			this.spikes[n].pivotX = is[n] * (1.0F + MathHelper.cos(h * 1.5F + (float)n) * 0.01F - m);
-			this.spikes[n].pivotY = 16.0F + js[n] * (1.0F + MathHelper.cos(h * 1.5F + (float)n) * 0.01F - m);
-			this.spikes[n].pivotZ = ks[n] * (1.0F + MathHelper.cos(h * 1.5F + (float)n) * 0.01F - m);
+			this.spikes[n].pivotX = is[n] * (1.0F + Mth.cos(h * 1.5F + (float)n) * 0.01F - m);
+			this.spikes[n].pivotY = 16.0F + js[n] * (1.0F + Mth.cos(h * 1.5F + (float)n) * 0.01F - m);
+			this.spikes[n].pivotZ = ks[n] * (1.0F + Mth.cos(h * 1.5F + (float)n) * 0.01F - m);
 		}
 
 		this.eye.pivotZ = -8.25F;
 		Entity entity2 = MinecraftClient.getInstance().getCameraEntity();
 		if (guardianEntity.hasBeamTarget()) {
@@ -97,21 +97,21 @@
 
 			Vec3d vec3d3 = entity.getRotationVector(0.0F);
 			vec3d3 = new Vec3d(vec3d3.x, 0.0, vec3d3.z);
 			Vec3d vec3d4 = new Vec3d(vec3d2.x - vec3d.x, 0.0, vec3d2.z - vec3d.z).normalize().rotateY((float) (Math.PI / 2));
 			double e = vec3d3.dotProduct(vec3d4);
-			this.eye.pivotX = MathHelper.sqrt((float)Math.abs(e)) * 2.0F * (float)Math.signum(e);
+			this.eye.pivotX = Mth.sqrt((float)Math.abs(e)) * 2.0F * (float)Math.signum(e);
 		}
 
 		this.eye.visible = true;
 		float o = guardianEntity.getSpikesExtension(l);
-		this.tail[0].posY = MathHelper.sin(o) * (float) Math.PI * 0.05F;
-		this.tail[1].posY = MathHelper.sin(o) * (float) Math.PI * 0.1F;
+		this.tail[0].posY = Mth.sin(o) * (float) Math.PI * 0.05F;
+		this.tail[1].posY = Mth.sin(o) * (float) Math.PI * 0.1F;
 		this.tail[1].pivotX = -1.5F;
 		this.tail[1].pivotY = 0.5F;
 		this.tail[1].pivotZ = 14.0F;
-		this.tail[2].posY = MathHelper.sin(o) * (float) Math.PI * 0.15F;
+		this.tail[2].posY = Mth.sin(o) * (float) Math.PI * 0.15F;
 		this.tail[2].pivotX = 0.5F;
 		this.tail[2].pivotY = 0.5F;
 		this.tail[2].pivotZ = 6.0F;
 	}
 }
