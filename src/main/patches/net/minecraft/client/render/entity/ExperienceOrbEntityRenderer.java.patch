--- ExperienceOrbEntityRenderer.java
+++ ExperienceOrbEntityRenderer.java
@@ -1,15 +1,15 @@
 package net.minecraft.client.render.entity;
 
-import com.mojang.blaze3d.platform.GLX;
-import com.mojang.blaze3d.platform.GlStateManager;
+import com.mojang.blaze3d.platform.legacy.GLX;
+import com.mojang.blaze3d.platform.legacy.GlStateManager;
 import net.minecraft.client.render.BufferBuilder;
 import net.minecraft.client.render.Tessellator;
 import net.minecraft.client.render.VertexFormats;
 import net.minecraft.entity.ExperienceOrbEntity;
 import net.minecraft.util.Identifier;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 
 public class ExperienceOrbEntityRenderer extends EntityRenderer<ExperienceOrbEntity> {
 	private static final Identifier TEXTURE = new Identifier("textures/entity/experience_orb.png");
 
 	public ExperienceOrbEntityRenderer(EntityRenderDispatcher entityRenderDispatcher) {
@@ -35,13 +35,13 @@
 		int s = q / 65536;
 		GLX.gl13MultiTexCoord2f(GLX.lightmapTextureUnit, (float)r / 1.0F, (float)s / 1.0F);
 		GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
 		float t = 255.0F;
 		float u = ((float)experienceOrbEntity.renderTicks + h) / 2.0F;
-		s = (int)((MathHelper.sin(u + 0.0F) + 1.0F) * 0.5F * 255.0F);
+		s = (int)((Mth.sin(u + 0.0F) + 1.0F) * 0.5F * 255.0F);
 		int v = 255;
-		int w = (int)((MathHelper.sin(u + (float) (Math.PI * 4.0 / 3.0)) + 1.0F) * 0.1F * 255.0F);
+		int w = (int)((Mth.sin(u + (float) (Math.PI * 4.0 / 3.0)) + 1.0F) * 0.1F * 255.0F);
 		GlStateManager.rotate(180.0F - this.dispatcher.yaw, 0.0F, 1.0F, 0.0F);
 		GlStateManager.rotate(-this.dispatcher.pitch, 1.0F, 0.0F, 0.0F);
 		float x = 0.3F;
 		GlStateManager.scale(0.3F, 0.3F, 0.3F);
 		Tessellator tessellator = Tessellator.getInstance();
