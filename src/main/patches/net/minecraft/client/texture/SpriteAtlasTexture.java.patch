--- SpriteAtlasTexture.java
+++ SpriteAtlasTexture.java
@@ -121,12 +121,12 @@
 
 			j = Math.min(j, Math.min(sprite.getWidth(), sprite.getHeight()));
 			int n = Math.min(Integer.lowestOneBit(sprite.getWidth()), Integer.lowestOneBit(sprite.getHeight()));
 			if (n < k) {
 				LOGGER.warn(
-					"Texture {} with size {}x{} limits mip level from {} to {}",
-					new Object[]{identifier2, sprite.getWidth(), sprite.getHeight(), MathHelper.log2(k), MathHelper.log2(n)}
+						"Texture {} with size {}x{} limits mip level from {} to {}",
+						new Object[]{identifier2, sprite.getWidth(), sprite.getHeight(), MathHelper.log2(k), MathHelper.log2(n)}
 				);
 				k = n;
 			}
 
 			textureStitcher.add(sprite);
@@ -203,12 +203,12 @@
 		}
 	}
 
 	private Identifier method_7003(Identifier identifier, int i) {
 		return i == 0
-			? new Identifier(identifier.getNamespace(), String.format("%s/%s%s", this.name, identifier.getPath(), ".png"))
-			: new Identifier(identifier.getNamespace(), String.format("%s/mipmaps/%s.%d%s", this.name, identifier.getPath(), i, ".png"));
+				? new Identifier(identifier.getNamespace(), String.format("%s/%s%s", this.name, identifier.getPath(), ".png"))
+				: new Identifier(identifier.getNamespace(), String.format("%s/mipmaps/%s.%d%s", this.name, identifier.getPath(), i, ".png"));
 	}
 
 	public Sprite getSprite(String string) {
 		Sprite sprite = (Sprite)this.sprites.get(string);
 		if (sprite == null) {
