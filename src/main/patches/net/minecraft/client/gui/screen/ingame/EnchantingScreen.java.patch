--- EnchantingScreen.java
+++ EnchantingScreen.java
@@ -1,9 +1,9 @@
 package net.minecraft.client.gui.screen.ingame;
 
 import com.google.common.collect.Lists;
-import com.mojang.blaze3d.platform.GlStateManager;
+import com.mojang.blaze3d.platform.legacy.GlStateManager;
 import java.util.List;
 import java.util.Random;
 import net.minecraft.client.font.TextRenderer;
 import net.minecraft.client.gui.EnchantingPhrases;
 import net.minecraft.client.render.DiffuseLighting;
@@ -15,11 +15,11 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.screen.EnchantingScreenHandler;
 import net.minecraft.text.Nameable;
 import net.minecraft.util.Formatting;
 import net.minecraft.util.Identifier;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.world.World;
 import org.lwjgl.util.glu.Project;
 
 public class EnchantingScreen extends HandledScreen {
 	private static final Identifier TEXTURE = new Identifier("textures/gui/container/enchanting_table.png");
@@ -107,12 +107,12 @@
 		GlStateManager.translate((1.0F - m) * 0.2F, (1.0F - m) * 0.1F, (1.0F - m) * 0.25F);
 		GlStateManager.rotate(-(1.0F - m) * 90.0F - 90.0F, 0.0F, 1.0F, 0.0F);
 		GlStateManager.rotate(180.0F, 1.0F, 0.0F, 0.0F);
 		float n = this.pageAngle + (this.nextPageAngle - this.pageAngle) * f + 0.25F;
 		float o = this.pageAngle + (this.nextPageAngle - this.pageAngle) * f + 0.75F;
-		n = (n - (float)MathHelper.fastFloor((double)n)) * 1.6F - 0.3F;
-		o = (o - (float)MathHelper.fastFloor((double)o)) * 1.6F - 0.3F;
+		n = (n - (float) Mth.fastFloor((double)n)) * 1.6F - 0.3F;
+		o = (o - (float) Mth.fastFloor((double)o)) * 1.6F - 0.3F;
 		if (n < 0.0F) {
 			n = 0.0F;
 		}
 
 		if (o < 0.0F) {
@@ -261,13 +261,13 @@
 			this.nextPageTurningSpeed += 0.2F;
 		} else {
 			this.nextPageTurningSpeed -= 0.2F;
 		}
 
-		this.nextPageTurningSpeed = MathHelper.clamp(this.nextPageTurningSpeed, 0.0F, 1.0F);
+		this.nextPageTurningSpeed = Mth.clamp(this.nextPageTurningSpeed, 0.0F, 1.0F);
 		float f = (this.approximatePageAngle - this.nextPageAngle) * 0.4F;
 		float g = 0.2F;
-		f = MathHelper.clamp(f, -g, g);
+		f = Mth.clamp(f, -g, g);
 		this.pageRotationSpeed = this.pageRotationSpeed + (f - this.pageRotationSpeed) * 0.9F;
 		this.nextPageAngle = this.nextPageAngle + this.pageRotationSpeed;
 	}
 }
