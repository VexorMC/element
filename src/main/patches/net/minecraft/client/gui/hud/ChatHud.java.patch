--- ChatHud.java
+++ ChatHud.java
@@ -1,20 +1,20 @@
 package net.minecraft.client.gui.hud;
 
 import com.google.common.collect.Lists;
-import com.mojang.blaze3d.platform.GlStateManager;
+import com.mojang.blaze3d.platform.legacy.GlStateManager;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.client.MinecraftClient;
 import net.minecraft.client.gui.DrawableHelper;
 import net.minecraft.client.gui.screen.ChatScreen;
 import net.minecraft.client.util.Texts;
 import net.minecraft.client.util.Window;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.text.LiteralText;
 import net.minecraft.text.Text;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class ChatHud extends DrawableHelper {
 	private static final Logger LOGGER = LogManager.getLogger();
@@ -40,11 +40,11 @@
 				if (this.isChatFocused()) {
 					bl = true;
 				}
 
 				float g = this.getChatScale();
-				int m = MathHelper.ceil((float)this.getWidth() / g);
+				int m = Mth.ceil((float)this.getWidth() / g);
 				GlStateManager.pushMatrix();
 				GlStateManager.translate(2.0F, 20.0F, 0.0F);
 				GlStateManager.scale(g, g, 1.0F);
 
 				for (int n = 0; n + this.scrolledLines < this.visibleMessages.size() && n < j; n++) {
@@ -53,11 +53,11 @@
 						int o = i - chatHudLine.getCreationTick();
 						if (o < 200 || bl) {
 							double d = (double)o / 200.0;
 							d = 1.0 - d;
 							d *= 10.0;
-							d = MathHelper.clamp(d, 0.0, 1.0);
+							d = Mth.clamp(d, 0.0, 1.0);
 							d *= d;
 							int p = (int)(255.0 * d);
 							if (bl) {
 								p = 255;
 							}
@@ -116,11 +116,11 @@
 	private void addMessage(Text text, int i, int j, boolean bl) {
 		if (i != 0) {
 			this.removeMessage(i);
 		}
 
-		int k = MathHelper.floor((float)this.getWidth() / this.getChatScale());
+		int k = Mth.floor((float)this.getWidth() / this.getChatScale());
 		List<Text> list = Texts.wrapLines(text, k, this.client.textRenderer, false, false);
 		boolean bl2 = this.isChatFocused();
 
 		for (Text text2 : list) {
 			if (bl2 && this.scrolledLines > 0) {
@@ -189,15 +189,15 @@
 			Window window = new Window(this.client);
 			int k = window.getScaleFactor();
 			float f = this.getChatScale();
 			int l = i / k - 3;
 			int m = j / k - 27;
-			l = MathHelper.floor((float)l / f);
-			m = MathHelper.floor((float)m / f);
+			l = Mth.floor((float)l / f);
+			m = Mth.floor((float)m / f);
 			if (l >= 0 && m >= 0) {
 				int n = Math.min(this.getVisibleLineCount(), this.visibleMessages.size());
-				if (l <= MathHelper.floor((float)this.getWidth() / this.getChatScale()) && m < this.client.textRenderer.fontHeight * n + n) {
+				if (l <= Mth.floor((float)this.getWidth() / this.getChatScale()) && m < this.client.textRenderer.fontHeight * n + n) {
 					int o = m / this.client.textRenderer.fontHeight + this.scrolledLines;
 					if (o >= 0 && o < this.visibleMessages.size()) {
 						ChatHudLine chatHudLine = (ChatHudLine)this.visibleMessages.get(o);
 						int p = 0;
 
@@ -259,17 +259,17 @@
 	}
 
 	public static int getWidth(float f) {
 		int i = 320;
 		int j = 40;
-		return MathHelper.floor(f * (float)(i - j) + (float)j);
+		return Mth.floor(f * (float)(i - j) + (float)j);
 	}
 
 	public static int getHeight(float f) {
 		int i = 180;
 		int j = 20;
-		return MathHelper.floor(f * (float)(i - j) + (float)j);
+		return Mth.floor(f * (float)(i - j) + (float)j);
 	}
 
 	public int getVisibleLineCount() {
 		return this.getHeight() / 9;
 	}
