--- MusicTracker.java
+++ MusicTracker.java
@@ -2,11 +2,11 @@
 
 import java.util.Random;
 import net.minecraft.client.MinecraftClient;
 import net.minecraft.util.Identifier;
 import net.minecraft.util.Tickable;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 
 public class MusicTracker implements Tickable {
 	private final Random random = new Random();
 	private final MinecraftClient field_8172;
 	private SoundInstance field_8173;
@@ -20,16 +20,16 @@
 	public void tick() {
 		MusicTracker.MusicType musicType = this.field_8172.getMusicType();
 		if (this.field_8173 != null) {
 			if (!musicType.getSoundIdentifier().equals(this.field_8173.getIdentifier())) {
 				this.field_8172.getSoundManager().stop(this.field_8173);
-				this.timeUntilNextSong = MathHelper.nextInt(this.random, 0, musicType.getMinDelay() / 2);
+				this.timeUntilNextSong = Mth.nextInt(this.random, 0, musicType.getMinDelay() / 2);
 			}
 
 			if (!this.field_8172.getSoundManager().isPlaying(this.field_8173)) {
 				this.field_8173 = null;
-				this.timeUntilNextSong = Math.min(MathHelper.nextInt(this.random, musicType.getMinDelay(), musicType.getMaxDelay()), this.timeUntilNextSong);
+				this.timeUntilNextSong = Math.min(Mth.nextInt(this.random, musicType.getMinDelay(), musicType.getMaxDelay()), this.timeUntilNextSong);
 			}
 		}
 
 		if (this.field_8173 == null && this.timeUntilNextSong-- <= 0) {
 			this.play(musicType);
