--- GiantJungleTreeFeature.java
+++ GiantJungleTreeFeature.java
@@ -4,11 +4,11 @@
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
 import net.minecraft.block.VineBlock;
 import net.minecraft.state.property.BooleanProperty;
 import net.minecraft.util.math.BlockPos;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.world.World;
 
 public class GiantJungleTreeFeature extends AbstractGiantTreeFeature {
 	public GiantJungleTreeFeature(boolean bl, int i, int j, BlockState blockState, BlockState blockState2) {
 		super(bl, i, j, blockState, blockState2);
@@ -22,16 +22,16 @@
 		} else {
 			this.generateJungleLeaves(world, blockPos.up(i), 2);
 
 			for (int j = blockPos.getY() + i - 2 - random.nextInt(4); j > blockPos.getY() + i / 2; j -= 2 + random.nextInt(4)) {
 				float f = random.nextFloat() * (float) Math.PI * 2.0F;
-				int k = blockPos.getX() + (int)(0.5F + MathHelper.cos(f) * 4.0F);
-				int l = blockPos.getZ() + (int)(0.5F + MathHelper.sin(f) * 4.0F);
+				int k = blockPos.getX() + (int)(0.5F + Mth.cos(f) * 4.0F);
+				int l = blockPos.getZ() + (int)(0.5F + Mth.sin(f) * 4.0F);
 
 				for (int m = 0; m < 5; m++) {
-					k = blockPos.getX() + (int)(1.5F + MathHelper.cos(f) * (float)m);
-					l = blockPos.getZ() + (int)(1.5F + MathHelper.sin(f) * (float)m);
+					k = blockPos.getX() + (int)(1.5F + Mth.cos(f) * (float)m);
+					l = blockPos.getZ() + (int)(1.5F + Mth.sin(f) * (float)m);
 					this.setBlockStateWithoutUpdatingNeighbors(world, new BlockPos(k, j - 3 + m / 2, l), this.treeLogState);
 				}
 
 				int m = 1 + random.nextInt(2);
 				int n = j;
