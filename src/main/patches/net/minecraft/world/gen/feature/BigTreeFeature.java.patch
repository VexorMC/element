--- BigTreeFeature.java
+++ BigTreeFeature.java
@@ -8,11 +8,11 @@
 import net.minecraft.block.Blocks;
 import net.minecraft.block.LeavesBlock;
 import net.minecraft.block.LogBlock;
 import net.minecraft.block.material.Material;
 import net.minecraft.util.math.BlockPos;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.world.World;
 
 public class BigTreeFeature extends FoliageFeature {
 	private Random random;
 	private World world;
@@ -93,11 +93,11 @@
 		if ((float)i < (float)this.maxHeight * 0.3F) {
 			return -1.0F;
 		} else {
 			float f = (float)this.maxHeight / 2.0F;
 			float g = f - (float)i;
-			float h = MathHelper.sqrt(f * f - g * g);
+			float h = Mth.sqrt(f * f - g * g);
 			if (g == 0.0F) {
 				h = f;
 			} else if (Math.abs(g) >= f) {
 				return 0.0F;
 			}
@@ -133,13 +133,13 @@
 			this.setBlockStateWithoutUpdatingNeighbors(this.world, blockPos4, block.getDefaultState().with(LogBlock.LOG_AXIS, axis));
 		}
 	}
 
 	private int getLargestPosComponent(BlockPos blockPos) {
-		int i = MathHelper.abs(blockPos.getX());
-		int j = MathHelper.abs(blockPos.getY());
-		int k = MathHelper.abs(blockPos.getZ());
+		int i = Mth.abs(blockPos.getX());
+		int j = Mth.abs(blockPos.getY());
+		int k = Mth.abs(blockPos.getZ());
 		if (k > i && k > j) {
 			return k;
 		} else {
 			return j > i ? j : i;
 		}
