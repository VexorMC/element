--- Chunk.java
+++ Chunk.java
@@ -22,11 +22,11 @@
 import net.minecraft.util.crash.CrashReportSection;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.Box;
 import net.minecraft.util.math.ChunkPos;
 import net.minecraft.util.math.Direction;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.world.LayeredBiomeSource;
 import net.minecraft.world.LightType;
 import net.minecraft.world.World;
 import net.minecraft.world.biome.Biome;
 import net.minecraft.world.level.LevelGeneratorType;
@@ -576,18 +576,18 @@
 		}
 	}
 
 	public void addEntity(Entity entity) {
 		this.containsEntities = true;
-		int i = MathHelper.floor(entity.x / 16.0);
-		int j = MathHelper.floor(entity.z / 16.0);
+		int i = Mth.floor(entity.x / 16.0);
+		int j = Mth.floor(entity.z / 16.0);
 		if (i != this.chunkX || j != this.chunkZ) {
 			LOGGER.warn("Wrong location! (" + i + ", " + j + ") should be (" + this.chunkX + ", " + this.chunkZ + "), " + entity, new Object[]{entity});
 			entity.remove();
 		}
 
-		int k = MathHelper.floor(entity.y / 16.0);
+		int k = Mth.floor(entity.y / 16.0);
 		if (k < 0) {
 			k = 0;
 		}
 
 		if (k >= this.entities.length) {
@@ -703,14 +703,14 @@
 	public void setModified() {
 		this.modified = true;
 	}
 
 	public void method_9141(Entity entity, Box box, List<Entity> list, Predicate<? super Entity> predicate) {
-		int i = MathHelper.floor((box.minY - 2.0) / 16.0);
-		int j = MathHelper.floor((box.maxY + 2.0) / 16.0);
-		i = MathHelper.clamp(i, 0, this.entities.length - 1);
-		j = MathHelper.clamp(j, 0, this.entities.length - 1);
+		int i = Mth.floor((box.minY - 2.0) / 16.0);
+		int j = Mth.floor((box.maxY + 2.0) / 16.0);
+		i = Mth.clamp(i, 0, this.entities.length - 1);
+		j = Mth.clamp(j, 0, this.entities.length - 1);
 
 		for (int k = i; k <= j; k++) {
 			if (!this.entities[k].isEmpty()) {
 				for (Entity entity2 : this.entities[k]) {
 					if (entity2.getBoundingBox().intersects(box) && entity2 != entity) {
@@ -732,14 +732,14 @@
 			}
 		}
 	}
 
 	public <T extends Entity> void method_9140(Class<? extends T> class_, Box box, List<T> list, Predicate<? super T> predicate) {
-		int i = MathHelper.floor((box.minY - 2.0) / 16.0);
-		int j = MathHelper.floor((box.maxY + 2.0) / 16.0);
-		i = MathHelper.clamp(i, 0, this.entities.length - 1);
-		j = MathHelper.clamp(j, 0, this.entities.length - 1);
+		int i = Mth.floor((box.minY - 2.0) / 16.0);
+		int j = Mth.floor((box.maxY + 2.0) / 16.0);
+		i = Mth.clamp(i, 0, this.entities.length - 1);
+		j = Mth.clamp(j, 0, this.entities.length - 1);
 
 		for (int k = i; k <= j; k++) {
 			for (T entity : this.entities[k].method_10806(class_)) {
 				if (entity.getBoundingBox().intersects(box) && (predicate == null || predicate.apply(entity))) {
 					list.add(entity);
