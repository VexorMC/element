--- Biome.java
+++ Biome.java
@@ -32,11 +32,11 @@
 import net.minecraft.entity.passive.RabbitEntity;
 import net.minecraft.entity.passive.SheepEntity;
 import net.minecraft.entity.passive.SquidEntity;
 import net.minecraft.util.collection.Weighting;
 import net.minecraft.util.math.BlockPos;
-import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.Mth;
 import net.minecraft.util.math.noise.PerlinNoiseGenerator;
 import net.minecraft.world.World;
 import net.minecraft.world.chunk.ChunkBlockStateStorage;
 import net.minecraft.world.gen.feature.BigTreeFeature;
 import net.minecraft.world.gen.feature.DoublePlantFeature;
@@ -363,12 +363,12 @@
 		return this;
 	}
 
 	public int getSkyColor(float f) {
 		f /= 3.0F;
-		f = MathHelper.clamp(f, -1.0F, 1.0F);
-		return MathHelper.hsvToRgb(0.62222224F - f * 0.05F, 0.5F + f * 0.1F, 1.0F);
+		f = Mth.clamp(f, -1.0F, 1.0F);
+		return Mth.hsvToRgb(0.62222224F - f * 0.05F, 0.5F + f * 0.1F, 1.0F);
 	}
 
 	public List<Biome.SpawnEntry> getSpawnEntries(EntityCategory entityCategory) {
 		switch (entityCategory) {
 			case MONSTER:
@@ -420,18 +420,18 @@
 	public void decorate(World world, Random random, BlockPos blockPos) {
 		this.biomeDecorator.decorate(world, random, this, blockPos);
 	}
 
 	public int getGrassColor(BlockPos blockPos) {
-		double d = (double)MathHelper.clamp(this.getTemperature(blockPos), 0.0F, 1.0F);
-		double e = (double)MathHelper.clamp(this.getRainfall(), 0.0F, 1.0F);
+		double d = (double) Mth.clamp(this.getTemperature(blockPos), 0.0F, 1.0F);
+		double e = (double) Mth.clamp(this.getRainfall(), 0.0F, 1.0F);
 		return GrassColors.getColor(d, e);
 	}
 
 	public int getFoliageColor(BlockPos blockPos) {
-		double d = (double)MathHelper.clamp(this.getTemperature(blockPos), 0.0F, 1.0F);
-		double e = (double)MathHelper.clamp(this.getRainfall(), 0.0F, 1.0F);
+		double d = (double) Mth.clamp(this.getTemperature(blockPos), 0.0F, 1.0F);
+		double e = (double) Mth.clamp(this.getRainfall(), 0.0F, 1.0F);
 		return FoliageColors.getColor(d, e);
 	}
 
 	public boolean isMutatedBiome() {
 		return this.mutated;
