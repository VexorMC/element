--- TypeFilterableList.java
+++ TypeFilterableList.java
@@ -62,11 +62,11 @@
 	}
 
 	private void method_10803(T object, Class<?> class_) {
 		List<T> list = (List<T>)this.elementsByType.get(class_);
 		if (list == null) {
-			this.elementsByType.put(class_, Lists.newArrayList(new Object[]{object}));
+			this.elementsByType.put(class_, (List<T>) Lists.newArrayList(new Object[]{object}));
 		} else {
 			list.add(object);
 		}
 	}
 
@@ -93,21 +93,21 @@
 	public <S> Iterable<S> method_10806(Class<S> class_) {
 		return new Iterable<S>() {
 			public Iterator<S> iterator() {
 				List<T> list = (List<T>)TypeFilterableList.this.elementsByType.get(TypeFilterableList.this.method_10805(class_));
 				if (list == null) {
-					return Iterators.emptyIterator();
+					return Iterators.forArray();
 				} else {
 					Iterator<T> iterator = list.iterator();
 					return Iterators.filter(iterator, class_);
 				}
 			}
 		};
 	}
 
 	public Iterator<T> iterator() {
-		return this.allElements.isEmpty() ? Iterators.emptyIterator() : Iterators.unmodifiableIterator(this.allElements.iterator());
+		return this.allElements.isEmpty() ? Iterators.forArray() : Iterators.unmodifiableIterator(this.allElements.iterator());
 	}
 
 	public int size() {
 		return this.allElements.size();
 	}
